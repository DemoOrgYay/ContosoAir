# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
  pipelines: 
    - pipeline: buildContosoAir
      source: DemoOrgYay.ContosoAir
      trigger:
        branches:
          include:
            - master
pool:
  vmImage: ubuntu-latest

steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: 'specific'
      project: '260c7fca-a3b7-4421-addc-2f4817805dbc'
      definition: '100'
      buildVersionToDownload: 'latest'
      targetPath: '$(Pipeline.Workspace)'

  - task: AzureResourceManagerTemplateDeployment@3
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: 'Microsoft Azure Internal Consumption (adcb004d-eaae-471a-9341-d5e25a17c8ba)'
      action: 'Create Or Update Resource Group'
      resourceGroupName: '$(resourcegroup)'
      location: 'West US 2'
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.json'
      csmParametersFile: '$(Pipeline.Workspace)/drop/Templates/azuredeploy.parameters.json'
      overrideParameters: '-p_environment $(web_environment) -p_site_prefix $(web_prefix) -p_site_web_name $(web_site)'
      deploymentMode: 'Incremental'
  - task: AzureRmWebAppDeployment@4
    inputs:
      ConnectionType: 'AzureRM'
      azureSubscription: 'Microsoft Azure Internal Consumption (adcb004d-eaae-471a-9341-d5e25a17c8ba)'
      appType: 'webApp'
      WebAppName: '"$(web_prefix)-$(web_site)-$(web_environment)"'
      packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
      